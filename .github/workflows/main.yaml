name: mission-data-recorder

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  tii-mission-data-recorder-deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Debian package
        run: |
          set -exu
          ./build.sh .

      - uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.ARTIFACTORY_TOKEN }}

      - name: Upload to Artifactory
        env:
          ARTIFACTORY_REPO: debian-public-local
          DISTRIBUTION: focal
          COMPONENT: fog-sw
          ARCHITECTURE: amd64
          BUILD_NAME: mission-data-recorder
          CI: true
        if: github.event_name == 'push'
        run: |
          set -exu
          jfrog rt ping
          pkg=$(find "$GITHUB_WORKSPACE" -name 'mission-data-recorder*.deb')
          pkg_name=$(basename $pkg)
          jfrog rt u --deb "$DISTRIBUTION/$COMPONENT/$ARCHITECTURE" \
                     --target-props COMMIT="$GITHUB_SHA" \
                     --build-name "$BUILD_NAME" \
                     --build-number "$GITHUB_SHA" \
                     "$pkg" \
                     "$ARTIFACTORY_REPO/$pkg_name"
          jfrog rt build-publish "$BUILD_NAME" "$GITHUB_SHA"
          jfrog rt bpr "$BUILD_NAME" "$GITHUB_SHA" "$ARTIFACTORY_REPO" \
                       --status dev \
                       --comment "development build"

  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/tiiuae/tii-mission-data-recorder
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short
            type=raw,value=latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  run-linter:
    runs-on: ubuntu-latest
    container: ghcr.io/tiiuae/tii-golang-ros:galactic-go1.17
    steps:
      - uses: actions/checkout@v2

      - name: Prepare environment
        shell: bash
        run: ./lint.sh

      - uses: golangci/golangci-lint-action@v2
        with:
          args: ${{ env.lint_dirs }}
