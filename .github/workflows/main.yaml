name: mission-data-recorder

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  tii-mission-data-recorder-deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Debian package
        run: |
          set -exu
          ./build.sh .

      - name: Install jfrog CLI tool
        env:
          JFROG_CLI_URL: https://artifactory.ssrc.fi/artifactory/gen-public-local/tools/jfrog/jfrog-1.45.2.tar.gz
        if: github.event_name == 'push'
        run: |
          set -exu
          mkdir -p "$GITHUB_WORKSPACE/.jfrog/bin"
          curl -L "$JFROG_CLI_URL" -o "$GITHUB_WORKSPACE/.jfrog/jfrog.tar.gz"
          tar -C "$GITHUB_WORKSPACE/.jfrog/bin" -zxf "$GITHUB_WORKSPACE/.jfrog/jfrog.tar.gz"
          echo "$GITHUB_WORKSPACE/.jfrog/bin" >> "$GITHUB_PATH"
          echo "JFROG_CLI_HOME_DIR=$GITHUB_WORKSPACE/.jfrog" >> "$GITHUB_ENV"

      - name: Upload to Artifactory
        env:
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
          ARTIFACTORY_REPO: debian-public-local
          DISTRIBUTION: focal
          COMPONENT: fog-sw
          ARCHITECTURE: amd64
          BUILD_NAME: mission-data-recorder
          CI: true
        if: github.event_name == 'push'
        run: |
          set -exu
          jfrog rt c import "$ARTIFACTORY_TOKEN"
          jfrog rt ping
          pkg=$(find "$GITHUB_WORKSPACE" -name 'mission-data-recorder*.deb')
          jfrog rt u --deb "$DISTRIBUTION/$COMPONENT/$ARCHITECTURE" \
                     --target-props COMMIT="$GITHUB_SHA" \
                     --build-name "$BUILD_NAME" \
                     --build-number "$GITHUB_SHA" \
                     "$pkg" \
                     "$ARTIFACTORY_REPO"
          jfrog rt build-publish "$BUILD_NAME" "$GITHUB_SHA"
          jfrog rt bpr "$BUILD_NAME" "$GITHUB_SHA" "$ARTIFACTORY_REPO" \
                       --status dev \
                       --comment "development build"

      - name: trigger fog-drone build
        env:
          USER: ${{ secrets.DISPATCH_USER }}
          TOKEN: ${{ secrets.DISPATCH_TOKEN }}
        if: github.event_name != 'pull_request'
        run: |
          curl -X POST https://api.github.com/repos/tiiuae/dronsole-containers/dispatches \
               -H 'Accept: application/vnd.github.everest-preview+json' \
               -u $USER:$TOKEN \
               --data '{"event_type": "rebuild-fog-drone", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'

  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/tiiuae/tii-mission-data-recorder
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short
            type=raw,value={{branch}}-{{sha}}-{{date 'x'}}
            type=raw,value=latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
